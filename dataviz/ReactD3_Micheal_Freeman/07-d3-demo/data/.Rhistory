library(dplyr)
library(ggplot2)
View(midwest)
dim(midwest)
?midwest
levels(midwest$state)
unique(midwest$state)
styler:::style_active_file()
prepped <- midwest %>%
mutate(
state = replace(state, state == "IL", "Illinois"),
state = replace(state, state == "IN", "Indiana"),
state = replace(state, state == "MI", "Michigan"),
state = replace(state, state == "OH", "Ohio"),
state = replace(state, state == "WI", "Wisconsin")
)
View(prepped)
library(tools)
prepped <- midwest %>%
mutate(
state = replace(state, state == "IL", "Illinois"),
state = replace(state, state == "IN", "Indiana"),
state = replace(state, state == "MI", "Michigan"),
state = replace(state, state == "OH", "Ohio"),
state = replace(state, state == "WI", "Wisconsin"),
county = toTitleCase(county)
) %>%
select(county, state, %in% "pop")
prepped <- midwest %>%
mutate(
state = replace(state, state == "IL", "Illinois"),
state = replace(state, state == "IN", "Indiana"),
state = replace(state, state == "MI", "Michigan"),
state = replace(state, state == "OH", "Ohio"),
state = replace(state, state == "WI", "Wisconsin"),
county = toTitleCase(county)
) %>%
select(county, state, inmetro, contains("per"))
View(prepped)
?perchsd
?midwest
prepped <- midwest %>%
mutate(
state = replace(state, state == "IL", "Illinois"),
state = replace(state, state == "IN", "Indiana"),
state = replace(state, state == "MI", "Michigan"),
state = replace(state, state == "OH", "Ohio"),
state = replace(state, state == "WI", "Wisconsin"),
county = toTitleCase(county)
) %>%
select(county, state, inmetro, contains("per"), -perchsd)
midwest %>%
mutate(
state = replace(state, state == "IL", "Illinois"),
state = replace(state, state == "IN", "Indiana"),
state = replace(state, state == "MI", "Michigan"),
state = replace(state, state == "OH", "Ohio"),
state = replace(state, state == "WI", "Wisconsin"),
county = toTitleCase(county)
)
toTitleCase(midwest$county)
library(stringr)
prepped <- midwest %>%
mutate(
state = replace(state, state == "IL", "Illinois"),
state = replace(state, state == "IN", "Indiana"),
state = replace(state, state == "MI", "Michigan"),
state = replace(state, state == "OH", "Ohio"),
state = replace(state, state == "WI", "Wisconsin"),
county = str_to_title(county)
) %>%
select(county, state, inmetro, contains("per"), -perchsd)
setwd("~/Documents/react-d3/demo/data")
# Data prep
# Use built in `midwest` data from the `ggplot2` package
library(ggplot2)
library(dplyr)
library(stringr)
# Replace values with full state names
prepped <- midwest %>%
mutate(
state = replace(state, state == "IL", "Illinois"),
state = replace(state, state == "IN", "Indiana"),
state = replace(state, state == "MI", "Michigan"),
state = replace(state, state == "OH", "Ohio"),
state = replace(state, state == "WI", "Wisconsin"),
county = str_to_title(county)
) %>%
select(county, state, inmetro, contains("per"), -perchsd)
# Write data
write.csv("midwest.csv")
# Data prep
# Use built in `midwest` data from the `ggplot2` package
library(ggplot2)
library(dplyr)
library(stringr)
# Replace values with full state names
prepped <- midwest %>%
mutate(
state = replace(state, state == "IL", "Illinois"),
state = replace(state, state == "IN", "Indiana"),
state = replace(state, state == "MI", "Michigan"),
state = replace(state, state == "OH", "Ohio"),
state = replace(state, state == "WI", "Wisconsin"),
county = str_to_title(county)
) %>%
select(county, state, inmetro, contains("per"), -perchsd)
# Write data
write.csv(prepped, "midwest.csv", row.names = F)
